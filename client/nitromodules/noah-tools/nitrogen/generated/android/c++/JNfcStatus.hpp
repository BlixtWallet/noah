///
/// JNfcStatus.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "NfcStatus.hpp"



namespace margelo::nitro::noahtools {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "NfcStatus" and the the Kotlin data class "NfcStatus".
   */
  struct JNfcStatus final: public jni::JavaClass<JNfcStatus> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/noahtools/NfcStatus;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct NfcStatus by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    NfcStatus toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldIsSupported = clazz->getField<jboolean>("isSupported");
      jboolean isSupported = this->getFieldValue(fieldIsSupported);
      static const auto fieldIsEnabled = clazz->getField<jboolean>("isEnabled");
      jboolean isEnabled = this->getFieldValue(fieldIsEnabled);
      return NfcStatus(
        static_cast<bool>(isSupported),
        static_cast<bool>(isEnabled)
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JNfcStatus::javaobject> fromCpp(const NfcStatus& value) {
      return newInstance(
        value.isSupported,
        value.isEnabled
      );
    }
  };

} // namespace margelo::nitro::noahtools
